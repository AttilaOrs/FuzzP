
adder = @+@ {
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	};
	
minus = @-@ {
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	};
	
multi = @*@ {
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	[<2><2><2><2><2>]
	};
	

table = {
	[<FF,FF><FF,FF><FF,FF><FF,FF><FF,FF><-2,-2>]
	[<FF,FF><FF,FF><FF,FF><FF,FF><FF,FF><-1,-1>]
	[<FF,FF><FF,FF><FF,FF><FF,FF><FF,FF>< 0, 0>]
	[<FF,FF><FF,FF><FF,FF><FF,FF><FF,FF>< 1, 1>]
	[<FF,FF><FF,FF><FF,FF><FF,FF><FF,FF>< 2, 2>]
	};

sub RoomState {
	upTable = { 
		[< 2>< 2>< 2>< 2>< 2><-2>]
		[< 2>< 2>< 2>< 2>< 2><-1>]
		[< 2>< 2>< 2>< 2>< 2>< 0>]
		[< 2>< 2>< 2>< 2>< 2>< 1>]
		[< 2>< 2>< 2>< 2>< 2>< 2>]
		[<FF><FF><FF><FF><FF><FF>]
		};
		
	zeroTable = { 
		[< 0>< 0>< 0>< 0>< 0><-2>]
		[< 0>< 0>< 0>< 0>< 0><-1>]
		[< 0>< 0>< 0>< 0>< 0>< 0>]
		[< 0>< 0>< 0>< 0>< 0>< 1>]
		[< 0>< 0>< 0>< 0>< 0>< 2>]
		[<FF><FF><FF><FF><FF><FF>]
		};

	P0(1.0)->t0[upTable]-> P1(1.0)-> t1[zeroTable] -> P2(1.0) -> t2 -> P3(1.0) -> oT0;
							  t2 -> p4 -> t3[1] -> P0;
	iP10(0.0) -> t0;
	iP11(0.0) -> t1;              
	P0<= <0.0>;  
}

P0(100) -> t30 -> p30 -> t0 -> P10 -> t7[minus];
P0 <= <20.0>;
      t0 -> P2 -> t3[minus] -> P3(100) -> t4[multi] -> p4-> t31[adder];
      iP1(100)-> t6 ->p11->t3; //iP1 is for out temperature
                 t6 -> p12 ->t7;  
      
P5(1.0) -> t5[table] -> p6(1.0) -> t4;
t5 -> P5;
p6 -> t5;
P5 <= <0.00013888888>; // wall drop constant

t7 -> p13(100) -> t8[multi] ;

P20(1.0) -> t20[table] -> P21(1.0) -> t8; 
t20 -> P20;
p21 -> t20;
P20 <= <0.016>; // window open constant

rs = new RoomState;

t8 -> p13 -> t9[multi] -> p14 -> t31;

rs.oT0 -> p15(1.0) -> t9;
iP2(0.0) -> t10 -> rs.iP10(0.0); //open window event
iP3(0.0) -> t11 -> rs.iP11(0.0); //close window event


t30 -> p32 -> t32[minus];
t31 -> p33(100) -> t32; // rezult of the window and the wall

t32 -> p34(100) -> t34 -> p35 -> ot1;
              t34 -> p36 -> t35[1] -> P0; 


