
copySecond = {
	[<-2,-2><-1,-1><0,0><1,1><2,2>]
	[<-2,-2><-1,-1><0,0><1,1><2,2>]
	[<-2,-2><-1,-1><0,0><1,1><2,2>]
	[<-2,-2><-1,-1><0,0><1,1><2,2>]
	[<-2,-2><-1,-1><0,0><1,1><2,2>]
	};

minFinderCopyer = {
	[<-2,-2><-2,-1><-2, 0><-2, 1><-2, 2><ff,ff>]
	[<-2,-2><-1,-1><-1, 0><-1, 1><-1, 2><ff,ff>]
	[<-2,-2><-1,-1>< 0, 0>< 0, 1>< 0, 2><ff,ff>]
	[<-2,-2><-1,-1>< 0, 0>< 1, 1>< 1, 2><ff,ff>]
	[<-2,-2><-1,-1>< 0, 0>< 1, 1>< 2, 2><ff,ff>]
	[<ff,-2><ff,-1><ff, 0><ff, 1><ff, 2><ff,ff>]
	};

P0->t0->P1->t1->P2->t2[1]->P1;
iP4(0.0)->t0; //iP4 for green;
P2->t3->P0;
iP5(0.0)->t3; //iP5 for yellow
t1->P6->t7[copySecond]->P7(50)->t8;
P8(50)->t7->P8;

P8 <= <20>;
P0 <= <0>;

t8->p9->oT9; //demand to read lane info
t8->p10->t10;
iP11(50)->t10[minFinderCopyer]; //iP11 for the actual value of lane
t10->p12->oT13;// oT13 for the actual value 
t10->p13->oT14; // oT14 for actual value of lane
 